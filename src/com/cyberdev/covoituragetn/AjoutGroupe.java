package com.cyberdev.covoituragetn;


import com.codename1.capture.Capture;
import com.codename1.components.SpanLabel;
import com.codename1.io.ConnectionRequest;

import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;


import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;

import com.codename1.io.NetworkEvent;
import com.codename1.io.NetworkManager;
import com.codename1.ui.Button;
import com.codename1.ui.Command;
import com.codename1.ui.Component;
import com.codename1.ui.EncodedImage;
import com.codename1.ui.FontImage;
import com.codename1.ui.Image;
import com.codename1.ui.Label;
import com.codename1.ui.TextArea;
import com.codename1.ui.TextField;
import com.codename1.ui.Toolbar;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.plaf.Style;
import com.codename1.ui.util.ImageIO;
import com.codename1.util.Base64;
import entity.Groupe;
import entity.User;

import java.io.ByteArrayOutputStream;
import java.io.IOException;




/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class AjoutGroupe {

    private Form current,f2;
    private Resources theme;
 User userConn = LogIn.e;
     private ConnectionRequest connectionRequest;
     private SpanLabel sp;
       Groupe gr  = new Groupe();
         Image img=null;
           Style s = UIManager.getInstance().getComponentStyle("MultiLine1");
   String cheminPhoto;
    FontImage p = FontImage.createMaterial(FontImage.MATERIAL_PORTRAIT, s);
         EncodedImage placeholder = EncodedImage.createFromImage(p.scaled(p.getWidth() * 3, p.getHeight() * 3), false);
 String imageDataString="-1";

    
    public void start() {
Form f =new Form("Insert",BoxLayout.y());
 f.setUIID("log");
 
   // f.getToolbar().addCommandToSideMenu(cmd1);
      //  f.getToolbar().addCommandToSideMenu(cmd2);
       
       f.getToolbar().addCommandToSideMenu("Mes groupes", null, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                MesGroupes mesGroupes = new MesGroupes(theme);
                mesGroupes.getF().show();
            }
        });
        f.getToolbar().addCommandToSideMenu("Mes invitations", null, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                MesInvitations mesInv = new MesInvitations(theme);
                mesInv.getF().show();
            }
        });
              f.getToolbar().addCommandToSideMenu("Tous les groupes", null, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                ListeTousLesGroupes tsGroupes = new ListeTousLesGroupes(theme);
                tsGroupes.getF().show();
            }
        });
              f.getToolbar().addCommandToRightBar("Back",null, new ActionListener() {
   @Override
            public void actionPerformed(ActionEvent evt) {
                ListeTousLesGroupes tsGroupes = new ListeTousLesGroupes(theme);
                tsGroupes.getF().show();
            }});
        TextField tfNomGroupe= new TextField("","Nom du groupe");
        Button photo=new Button("ddd");
       
photo.setUIID("az");
//photo.setIcon(theme.getImage("Camera.png"));
        final Label cadrephoto=new Label();
        cadrephoto.getStyle().setAlignment(Component.CENTER);
        photo.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent evt) {
         cheminPhoto=Capture.capturePhoto();
        if (cheminPhoto!=null){ 
              ByteArrayOutputStream out = new ByteArrayOutputStream();
            try{
                img=Image.createImage(cheminPhoto);
                ImageIO imgIO = ImageIO.getImageIO();
                    imgIO.save(img, out, ImageIO.FORMAT_JPEG, 1);

                byte[] im = out.toByteArray();
                   imageDataString = Base64.encode(im);
            }
            catch(IOException ex) {Dialog.show("erreur", ex.getMessage(), "Ok",null);}
        cadrephoto.setIcon(img.scaled(350, 400));
            
        f.revalidate();
              }
    }
});
       
         TextArea tfDescriptionGroupe= new TextArea(5,2);
         tfDescriptionGroupe.setHint("Description du groupe");

        

          // String imageDataString = encodeImage(data);
       Button btn=new Button("Cr√®er un nouvrau groupe");
       
          f.add(tfNomGroupe);
           f.add(tfDescriptionGroupe);
      
          f.addComponent(photo);
          f.addComponent(cadrephoto);
          f.add(btn);
          f.show();
          btn.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent evt) {
        ConnectionRequest con = new ConnectionRequest();
        
        con.setUrl("http://localhost/script_sarra/groupes/insertGroupe.php?idUser="+userConn.getId());
 con.setHttpMethod("POST");
 con.addArgument("nom", tfNomGroupe.getText());
 con.addArgument("description", tfDescriptionGroupe.getText());
  con.addArgument("image", imageDataString);
     con.addResponseListener(new ActionListener<NetworkEvent>() {

                    @Override
                    public void actionPerformed(NetworkEvent evt) {
           
  
                        byte[] data = (byte[]) evt.getMetaData();
                        String s = new String(data);
                        System.out.println(s);
                        if (s.equals("success")) {
                            Dialog.show("Confirmation", "ajout ok", "Ok", null);
                        } else {
                            Dialog.show("Erreur", "erreur", "Ok", null);
                        }

                    }
                });
     
        NetworkManager.getInstance().addToQueue(con);
    }
});
    }

 
    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }

    public void destroy() {
    }

}
